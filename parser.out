Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    BACKTICK
    BREAK
    CASE
    CONSTRUCTOR
    DEFAULT
    DOLLAR
    FOR
    INTERFACE
    MODULE
    OR
    PIPE
    POWER
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    QUESTION
    SWITCH
    THIS
    TYPE
    TYPEOF
    VOID
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     assignment -> LET IDENTIFIER EQUALS value SEMICOLON
Rule 2     assignment -> LET IDENTIFIER COLON data_type EQUALS value SEMICOLON
Rule 3     assignment -> LET IDENTIFIER COLON data_type SEMICOLON
Rule 4     assignment -> CONST IDENTIFIER EQUALS value SEMICOLON
Rule 5     assignment -> CONST IDENTIFIER COLON data_type EQUALS value SEMICOLON
Rule 6     assignment -> VAR IDENTIFIER EQUALS value SEMICOLON
Rule 7     assignment -> VAR IDENTIFIER COLON data_type EQUALS value SEMICOLON
Rule 8     assignment -> VAR IDENTIFIER COLON data_type SEMICOLON
Rule 9     statement -> assignment
Rule 10    statement -> expression SEMICOLON
Rule 11    statement -> if_statement
Rule 12    statement -> print
Rule 13    statement -> input
Rule 14    statement -> function_def
Rule 15    statement -> return_statement
Rule 16    statement -> class_declaration
Rule 17    statement_block -> LBRACE statement_list RBRACE
Rule 18    statement_block -> statement
Rule 19    statement_list -> statement
Rule 20    statement_list -> statement statement_list
Rule 21    if_statement -> IF LPAREN expression RPAREN statement_block
Rule 22    if_statement -> IF LPAREN expression RPAREN statement_block ELSE statement_block
Rule 23    data_type -> STRING_TYPE
Rule 24    data_type -> NUMBER_TYPE
Rule 25    data_type -> BOOLEAN_TYPE
Rule 26    data_type -> CHAR_TYPE
Rule 27    data_type -> array_type
Rule 28    body -> sentence
Rule 29    body -> sentence body
Rule 30    sentence -> assignment
Rule 31    sentence -> expression
Rule 32    expression -> expression PLUS term
Rule 33    expression -> expression MINUS term
Rule 34    expression -> term
Rule 35    function_def -> FUNCTION IDENTIFIER LPAREN RPAREN statement_block
Rule 36    function_def -> FUNCTION IDENTIFIER LPAREN param_list RPAREN statement_block
Rule 37    param_list -> IDENTIFIER
Rule 38    param_list -> IDENTIFIER COMMA param_list
Rule 39    return_statement -> RETURN expression SEMICOLON
Rule 40    class_def -> CLASS IDENTIFIER LBRACE class_body RBRACE
Rule 41    class_member -> assignment
Rule 42    class_member -> function_def
Rule 43    term -> term TIMES factor
Rule 44    term -> term DIVIDE factor
Rule 45    term -> factor
Rule 46    factor -> NUMBER
Rule 47    value -> NUMBER
Rule 48    value -> STRING
Rule 49    value -> CHARACTER
Rule 50    value -> IDENTIFIER
Rule 51    value -> INPUT LPAREN STRING RPAREN
Rule 52    array -> LBRACKET RBRACKET
Rule 53    array -> LBRACKET element_list RBRACKET
Rule 54    element_list -> value
Rule 55    element_list -> value COMMA element_list
Rule 56    array_type -> NUMBER_TYPE LBRACKET RBRACKET
Rule 57    array_type -> STRING_TYPE LBRACKET RBRACKET
Rule 58    array_type -> BOOLEAN_TYPE LBRACKET RBRACKET
Rule 59    array_type -> ANY LBRACKET RBRACKET
Rule 60    expression -> value
Rule 61    print -> IDENTIFIER DOT IDENTIFIER LPAREN value RPAREN SEMICOLON
Rule 62    input -> IDENTIFIER EQUALS IDENTIFIER LPAREN value RPAREN SEMICOLON
Rule 63    expression -> expression AND expression
Rule 64    expression -> expression OROR expression
Rule 65    expression -> NOT expression
Rule 66    expression -> expression EQEQ expression
Rule 67    expression -> expression NOTEQ expression
Rule 68    expression -> expression GT expression
Rule 69    expression -> expression LT expression
Rule 70    expression -> expression GE expression
Rule 71    expression -> expression LE expression
Rule 72    empty -> <empty>
Rule 73    class_declaration -> CLASS IDENTIFIER LBRACE class_body RBRACE
Rule 74    class_body -> property
Rule 75    class_body -> empty
Rule 76    property -> IDENTIFIER COLON data_type SEMICOLON
Rule 77    program -> statement_list

Terminals, with rules where they appear

AND                  : 63
ANY                  : 59
ARROW                : 
BACKTICK             : 
BOOLEAN_TYPE         : 25 58
BREAK                : 
CASE                 : 
CHARACTER            : 49
CHAR_TYPE            : 26
CLASS                : 40 73
COLON                : 2 3 5 7 8 76
COMMA                : 38 55
CONST                : 4 5
CONSTRUCTOR          : 
DEFAULT              : 
DIVIDE               : 44
DOLLAR               : 
DOT                  : 61
ELSE                 : 22
EQEQ                 : 66
EQUALS               : 1 2 4 5 6 7 62
FOR                  : 
FUNCTION             : 35 36
GE                   : 70
GT                   : 68
IDENTIFIER           : 1 2 3 4 5 6 7 8 35 36 37 38 40 50 61 61 62 62 73 76
IF                   : 21 22
INPUT                : 51
INTERFACE            : 
LBRACE               : 17 40 73
LBRACKET             : 52 53 56 57 58 59
LE                   : 71
LET                  : 1 2 3
LPAREN               : 21 22 35 36 51 61 62
LT                   : 69
MINUS                : 33
MODULE               : 
NOT                  : 65
NOTEQ                : 67
NUMBER               : 46 47
NUMBER_TYPE          : 24 56
OR                   : 
PIPE                 : 
PLUS                 : 32
POWER                : 
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
QUESTION             : 
RBRACE               : 17 40 73
RBRACKET             : 52 53 56 57 58 59
RETURN               : 39
RPAREN               : 21 22 35 36 51 61 62
SEMICOLON            : 1 2 3 4 5 6 7 8 10 39 61 62 76
STRING               : 48 51
STRING_TYPE          : 23 57
SWITCH               : 
THIS                 : 
TIMES                : 43
TYPE                 : 
TYPEOF               : 
VAR                  : 6 7 8
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

OROR                 : 64
array                : 
array_type           : 27
assignment           : 9 30 41
body                 : 29
class_body           : 40 73
class_declaration    : 16
class_def            : 
class_member         : 
data_type            : 2 3 5 7 8 76
element_list         : 53 55
empty                : 75
expression           : 10 21 22 31 32 33 39 63 63 64 64 65 66 66 67 67 68 68 69 69 70 70 71 71
factor               : 43 44 45
function_def         : 14 42
if_statement         : 11
input                : 13
param_list           : 36 38
print                : 12
program              : 0
property             : 74
return_statement     : 15
sentence             : 28 29
statement            : 18 19 20
statement_block      : 21 22 22 35 36
statement_list       : 17 20 77
term                 : 32 33 34 43 44
value                : 1 2 4 5 6 7 54 55 60 61 62

